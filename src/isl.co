const debounce = require('lodash/debounce')
const dat = require('dat.gui/build/dat.gui.js')

const HeightmapGenerator = require('./HeightmapGenerator.co')
const {HeightmapThreeJS} = require('./HeightmapThreeJS')
const IslandGenerator = require('./IslandGenerator.co')

makeUI = !(ig) ->
	debouncedGenerate = debounce((->ig.regenerateAndDraw()), 50)
	gui = new dat.GUI()
	for group of IslandGenerator.PARAMS.groups
		if group.name
			folder = gui.addFolder(group.name)
		else
			folder = gui
		for param of group.params
			guiParam = null
			if param.type == 'int'
				guiParam = folder.add(ig.params, param.name, param.min, param.max).step(1)
			else if param.type == 'float'
				guiParam = folder.add(ig.params, param.name, param.min, param.max)
			else if param.type == 'bool'
				guiParam = folder.add(ig.params, param.name)
			else if param.type == "string"
				guiParam = folder.add(ig.params, param.name)
			guiParam.onChange(debouncedGenerate)
	ig.gui = gui

makeButton = (text, handler) ->
	button = document.createElement("button")
		&innerHTML = text
		&addEventListener "click", handler, false
		document.body.appendChild &
	return button

main = !->
	window.ig = ig = new IslandGenerator("dkkkhurf a der3")
	makeUI(ig)

	ig.regenerateAndDraw()

	generateHeightMap = !->
		hmg = new HeightmapGenerator(ig, 256, 256)
		hmg.startGenerate()
		stepGeneration = !->
			if hmg.generateNextLine() then
				setTimeout(stepGeneration, 1)
		stepGeneration()

		enableWebGL = !->
			th = new HeightmapThreeJS(hmg)
			setInterval((->th.render()), 1000 / 40.0)
			th.updateMesh()

		makeButton("WebGL", enableWebGL)

	makeButton("Generate Heightmap", generateHeightMap)
	document.body.appendChild document.createElement("br")

export main
